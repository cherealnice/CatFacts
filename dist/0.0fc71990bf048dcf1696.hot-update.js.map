{"version":3,"sources":["webpack:///./javascripts/actions/index.js?139a"],"names":[],"mappings":";;;;;;;;;;;;;sCAIO,EAAc;;kDACO,EAA2B;;KAA3C,UAAU;;AAEf,KAAM,SAAS,GAAG,SAAZ,SAAS,CAAI,EAAE,EAAK;AAC/B,UAAO;AACL,SAAI,uBAAY;AAChB,OAAE,EAAE,EAAE;IACP,CAAC;EACH,CAAC;;;AAEK,KAAM,iBAAiB,GAAG,SAApB,iBAAiB,GAAS;AACrC,UAAO,UAAC,QAAQ,EAAE,QAAQ,EAAK;AAC7B,SAAI,eAAe,CAAC,QAAQ,EAAE,CAAC,EAAE;AAC/B,eAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;MACvB;IACF,CAAC;EACH,CAAC;;;AAEF,KAAM,WAAW,GAAG,SAAd,WAAW,GAAS;AACxB,UAAO;AACL,SAAI,yBAAc;IACnB,CAAC;EACH,CAAC;;AAEF,KAAM,SAAS,GAAG,SAAZ,SAAS,GAAS;AACtB,UAAO,kBAAQ,EAAI;AACjB,aAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;AACxB,YAAO,UAAU,CAAC,SAAS,EAAE,CAC1B,IAAI,CAAC,cAAI,EAAI;AACZ,eAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC;IACN,CAAC;EACH,CAAC;;AAEF,KAAM,WAAW,GAAG,SAAd,WAAW,CAAI,IAAI,EAAK;AAC5B,UAAO;AACL,SAAI,yBAAc;AAClB,SAAI,EAAE,IAAI;AACV,aAAQ,EAAE,KAAK;IAChB,CAAC;EACH,CAAC;;AAEF,KAAM,eAAe,GAAG,SAAlB,eAAe,CAAI,KAAK,EAAK;AACjC,OAAI,KAAK,CAAC,QAAQ,EAAE;AAClB,YAAO,KAAK,CAAC;IACd;AACD,UAAO,IAAI,CAAC;EACb,CAAC;;AAEF,KAAM,SAAS,GAAG,SAAZ,SAAS,CAAI,IAAI,EAAK;AAC1B,UAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAE,UAAC,CAAC,EAAE,GAAG;YACpC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,SAAS,EAAE;IAAC,CAChC,CAAC;EACH,C","file":"0.0fc71990bf048dcf1696.hot-update.js","sourcesContent":["import {\n  DELETE_CAT,\n  RECEIVE_CATS,\n  REQUEST_CATS\n} from '../constants';\nimport * as ApiActions from '../middleware/api_actions';\n\nexport const deleteCat = (id) => {\n  return {\n    type: DELETE_CAT,\n    id: id\n  };\n};\n\nexport const fetchCatsIfNeeded = () => {\n  return (dispatch, getState) => {\n    if (shouldFetchCats(getState())) {\n      dispatch(fetchCats());\n    }\n  };\n};\n\nconst requestCats = () => {\n  return {\n    type: REQUEST_CATS\n  };\n};\n\nconst fetchCats = () => {\n  return dispatch => {\n    dispatch(requestCats());\n    return ApiActions.fetchCats()\n      .then(cats => {\n        dispatch(receiveCats(cats));\n      });\n  };\n};\n\nconst receiveCats = (cats) => {\n  return {\n    type: RECEIVE_CATS,\n    cats: cats,\n    fetching: false\n  };\n};\n\nconst shouldFetchCats = (state) => {\n  if (state.fetching) {\n    return false;\n  }\n  return true;\n};\n\nconst parseCats = (data) => {\n  return $(data).find('url').map( (i, img) =>\n    ({ id: i, url: img.innerHTML })\n  );\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./javascripts/actions/index.js\n **/"],"sourceRoot":""}