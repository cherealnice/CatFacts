{"version":3,"sources":["webpack:///./javascripts/actions/index.js?139a"],"names":[],"mappings":";;;;;;;;;;;;;mCAAc,GAAQ;;;;qCACuB,GAAc;;;;sCAIpD,EAAc;;AAEd,KAAM,SAAS,GAAG,SAAZ,SAAS,CAAI,EAAE,EAAK;AAC/B,UAAO;AACL,SAAI,uBAAY;AAChB,OAAE,EAAE,EAAE;IACP,CAAC;EACH,CAAC;;;AAEK,KAAM,iBAAiB,GAAG,SAApB,iBAAiB,GAAS;AACrC,UAAO,UAAC,QAAQ,EAAE,QAAQ,EAAK;AAC7B,SAAI,eAAe,CAAC,QAAQ,EAAE,CAAC,EAAE;AAC/B,eAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;MACvB;IACF,CAAC;EACH,CAAC;;;AAEF,KAAM,WAAW,GAAG,SAAd,WAAW,GAAS;AACxB,UAAO;AACL,SAAI,yBAAc;IACnB,CAAC;EACH,CAAC;;AAEF,KAAM,SAAS,GAAG,SAAZ,SAAS,GAAS;AACtB,UAAO,kBAAQ,EAAI;AACjB,aAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;AACxB,YACE,oBAAE,IAAI,CACJ,oBAAE,IAAI,CAAC;AACL,UAAG,oBAAU;AACb,WAAI,EAAE,KAAK;AACX,eAAQ,EAAE,KAAK;MAChB,CAAC,EACF,oBAAE,IAAI,CAAC;AACL,UAAG,mBAAS;AACZ,WAAI,EAAE,KAAK;AACX,eAAQ,EAAE,MAAM;MACjB,CAAC,CACH,CACA,IAAI,CAAC,UAAC,MAAM,EAAE,KAAK,EAAK;AACvB,WAAI,MAAM,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;AACrD,iBAAQ,CAAC,WAAW,CAAC,yBAAU,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,MAAM;AACL,cAAK,CAAC,yCAAyC,CAAC,CAAC;QAClD;MACF,CAAC,CACF;IACH,CAAC;EACH,CAAC;;AAEF,KAAM,WAAW,GAAG,SAAd,WAAW,CAAI,IAAI,EAAK;AAC5B,UAAO;AACL,SAAI,yBAAc;AAClB,SAAI,EAAE,IAAI;AACV,aAAQ,EAAE,KAAK;IAChB,CAAC;EACH,CAAC;;AAEF,KAAM,eAAe,GAAG,SAAlB,eAAe,CAAI,KAAK,EAAK;AACjC,OAAI,KAAK,CAAC,QAAQ,EAAE;AAClB,YAAO,KAAK,CAAC;IACd;AACD,UAAO,IAAI,CAAC;EACb,C","file":"0.cea95a6f0d79062e3de3.hot-update.js","sourcesContent":["import $ from 'jquery';\nimport { parseCats, imageUrl, factUrl } from '../util/util';\n// import * as ApiActions from '../middleware/api_actions';\nimport {\n  DELETE_CAT, RECEIVE_CATS, REQUEST_CATS\n} from '../constants';\n\nexport const deleteCat = (id) => {\n  return {\n    type: DELETE_CAT,\n    id: id\n  };\n};\n\nexport const fetchCatsIfNeeded = () => {\n  return (dispatch, getState) => {\n    if (shouldFetchCats(getState())) {\n      dispatch(fetchCats());\n    }\n  };\n};\n\nconst requestCats = () => {\n  return {\n    type: REQUEST_CATS\n  };\n};\n\nconst fetchCats = () => {\n  return dispatch => {\n    dispatch(requestCats());\n    return (\n      $.when(\n        $.ajax({\n          url: imageUrl,\n          type: 'GET',\n          dataType: 'xml'\n        }),\n        $.ajax({\n          url: factUrl,\n          type: 'GET',\n          dataType: 'json'\n        })\n      )\n      .then((images, facts) => {\n        if (images[1] === 'success' && facts[1] === 'success') {\n          dispatch(receiveCats(parseCats(images[0], facts[0])));\n        } else {\n          alert('Something went wrong, please try again!');\n        }\n      })\n    );\n  };\n};\n\nconst receiveCats = (cats) => {\n  return {\n    type: RECEIVE_CATS,\n    cats: cats,\n    fetching: false\n  };\n};\n\nconst shouldFetchCats = (state) => {\n  if (state.fetching) {\n    return false;\n  }\n  return true;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./javascripts/actions/index.js\n **/"],"sourceRoot":""}